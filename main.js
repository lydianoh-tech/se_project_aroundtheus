!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("modal__close-icon")||e.target===this._popup)&&this.close()}))}}class t extends e{constructor(e,t){super(e),this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset(),this.close()}))}}class s{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("card__like-button_active")})),this._deleteButton.addEventListener("click",(()=>{this._element.remove(),this._element=null}))}generateCard(){return this._element=this._getTemplate(),this._cardImageElement=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._element.querySelector(".card__title").textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._element}}class n{constructor(e,t){this.settings=e,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t&&(t.textContent=e.validationMessage,t.classList.add(this._errorClass)),e.classList.add(this._inputErrorClass)}_hideError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t&&(t.textContent="",t.classList.remove(this._errorClass)),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_toggleButtonState(){this._inputList.every((e=>e.validity.valid))?(console.log("did this fire too"),this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):this.disableButton()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>this._hideError(e))),this._toggleButtonState()}}const o=document.querySelector("#profile__edit-button"),r=(document.querySelector("#profile__modal"),document.querySelector("#modal__profile-title"),document.querySelector("#profile__title"),document.querySelector("#profile__description"),document.querySelector("#profile__name-input"),document.querySelector("#profile__description-input"),document.querySelector("#profile__add-button")),i=(document.querySelector("#cards__list"),document.querySelector("#cards__template").content.querySelector(".card"),document.forms.profile__form,document.forms.card__form),a=(document.querySelector("#add__card-modal"),document.querySelector("#add__card-title"),document.querySelector("#add__card-name"),document.querySelector("#add__card-link"),document.querySelector("#image__modal")),l=(a.querySelector("#image__link"),a.querySelector("#image__title"),new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:"#profile__title",jobSelector:"#profile__description"})),c=new class extends e{constructor(e){super(e),this._image=this._popup.querySelector(".modal__image-link"),this._caption=this._popup.querySelector(".modal__image-title")}open(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._caption.textContent=t,super.open()}}("#image__modal");c.setEventListeners();const _=new t("#profile__modal",(e=>{l.setUserInfo({name:e.name,job:e.description}),_.close()}));function u(e){return new s(e,"#cards__template",(()=>{c.open(e)})).generateCard()}_.setEventListeners();const m=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=u(e);m.addItem(t)}},"#cards__list");m.renderItems(),o.addEventListener("click",(()=>{const e=l.getUserInfo();_.setInputValues({name:e.name,description:e.job}),_.open()})),r.addEventListener("click",(()=>{p.open()}));const d={};var h;h={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_type_disabled",inputErrorClass:"popup__input_type_error",errorClass:"modal__error"},Array.from(document.querySelectorAll(h.formSelector)).forEach((e=>{const t=new n(h,e),s=e.getAttribute("name");d[s]=t,t.enableValidation()}));const p=new t("#add__card-modal",(e=>{const t=u({name:e.title,link:e.image});m.addItem(t),p.close();const s=i.getAttribute("name");d[s].disableButton()}));p.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,